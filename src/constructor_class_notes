constructor:

=> special method or function
=> public static void main(){
 //access specifier
//return type

}

c

class A{

A(){ // constructor
// same name as the class name
// return type
// always public
// initialisation purpose
// automatic calling

}

}


class demo{

private int age;
private String name;

demo(int a , String s){
age =a;
name=s;


}
psvm(){
   demo d = new demo(23,"robin");
demo d1 = new demo(24,"alex");
d.fun();
}
void fun(){

}

}
Notes: 
In Java, a constructor is a block of codes similar to the method. It is called when an instance of the class is created. At the time of calling constructor, memory for the object is allocated in the memory.

It is a special type of method which is used to initialize the object.

Every time an object is created using the new() keyword, at least one constructor is called.

It calls a default constructor if there is no constructor available in the class. In such case, Java compiler provides a default constructor by default.

Rules for creating Java constructor
There are two rules defined for the constructor.

Constructor name must be the same as its class name
A Constructor must have no explicit return type
A Java constructor cannot be abstract, static, final, and synchronized
Note: We can use access modifiers while declaring a constructor. It controls

Types of Java constructors
There are two types of constructors in Java:

Default constructor (no-arg constructor)
Parameterized constructor

java Default Constructor
A constructor is called "Default Constructor" when it doesn't have any parameter.

Syntax of default constructor:
<class_name>(){}  
